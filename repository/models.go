// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0

package repository

import (
	"database/sql/driver"
	"fmt"
)

type ReportStatusEnum string

const (
	ReportStatusEnumWaiting ReportStatusEnum = "waiting"
	ReportStatusEnumHandled ReportStatusEnum = "handled"
)

func (e *ReportStatusEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ReportStatusEnum(s)
	case string:
		*e = ReportStatusEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for ReportStatusEnum: %T", src)
	}
	return nil
}

type NullReportStatusEnum struct {
	ReportStatusEnum ReportStatusEnum
	Valid            bool // Valid is true if ReportStatusEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullReportStatusEnum) Scan(value interface{}) error {
	if value == nil {
		ns.ReportStatusEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ReportStatusEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullReportStatusEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ReportStatusEnum), nil
}

type Report struct {
	ID          int64
	ProductID   int64
	Description string
	Status      NullReportStatusEnum
}
